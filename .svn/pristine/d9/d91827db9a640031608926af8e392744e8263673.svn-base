using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using Portaflex.Data;
using System.IO;

namespace Portaflex
{
    public partial class Main : Form
    {
        private Total total;
        private TabPage dirPage;
        private bool saved = false;
        private string path;
        private FileStream stream;

        public Main()
        {
            InitializeComponent();
            dataToolStripMenuItem.Visible = false;
            total = new Total();
            this.Icon = Properties.Resources.logo;
            this.Text = Texts.PrgName + " - " + Texts.NewTotal;
            total.DirChanged += new EventHandler(total_DirChanged);
            total.Departments.ListChanged += new ListChangedEventHandler(Departments_ListChanged);
            createTotalPage();
            this.SetStyle(ControlStyles.AllPaintingInWmPaint | ControlStyles.UserPaint | ControlStyles.DoubleBuffer, true);
        }

        private void total_DirChanged(object sender, EventArgs e)
        {
            manageDir(total.Dir == null);
        }

        /// <summary>
        /// Prida nebo odstrani zalozku Rezie.
        /// </summary>
        /// <param name="remove">Indikuje zda se ma zalozka pridat nebo odstranit.</param>
        private void manageDir(bool remove)
        {
            if (!remove)
            {
                dirPage = new TabPage("Režie");
                dirPage.ImageIndex = 3;
                createDirPage();
                insertPage(1, tabControl1, dirPage);
            }
            else if(dirPage != null)
            {
                tabControl1.TabPages.Remove(dirPage);
                dirPage = null;
            }
        }

        private void insertPage(int position, TabControl tc, TabPage tp)
        {
            List<TabPage> list = new List<TabPage>();
            int i = 0;
            foreach (TabPage p in tc.TabPages)
                list.Add(p);
            tc.TabPages.Clear();
            foreach (TabPage p in list)
            {
                if (i++ == position)
                    tc.TabPages.Add(tp);
                tc.TabPages.Add(p);
            }
            tc.SelectedIndex = position;
        }

        private void createDirPage()
        {
            DirPage dp = new DirPage(total);
            dp.Dock = DockStyle.Fill;
            dirPage.Controls.Clear();
            dirPage.Controls.Add(dp);
        }

        private void createTotalPage()
        {
            TotalPage tp = new TotalPage(total);
            tp.Dock = DockStyle.Fill;
            totalPage.Controls.Clear();
            totalPage.Controls.Add(tp);
        }

        private void Departments_ListChanged(object sender, ListChangedEventArgs e)
        {
            if (e.ListChangedType == ListChangedType.ItemDeleted)
            {
                tabControl1.SelectedIndex = e.NewIndex;
                tabControl1.TabPages.RemoveAt(e.NewIndex + permPages());                
            }
            else if (e.ListChangedType == ListChangedType.ItemAdded)
            {
                Department d = total.Departments[e.NewIndex];
                insertTabPage(createTabPage(d));
                d.DepartmentChanged += new DepartmentChangedHandler(departmentChanged);
            }
        }

        private void tabControl1_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (tabControl1.SelectedTab == addPage)
            {
                Department d = new Department(total);                
                DepartmentProperties prop = new DepartmentProperties(ref d, true, "Nové středisko");
                if (prop.ShowDialog() != DialogResult.OK)
                {
                    tabControl1.SelectedTab = tabControl1.TabPages[0];
                    return;
                }
                d.Locked = false;
                total.Departments.Add(d);
            }
        }

        private void departmentChanged(AbstractDepartment d, DepartmentChangeEventArgs e)
        {
            TabPage page = tabControl1.TabPages[total.Departments.IndexOf((Department)d) + permPages()];
            page.Text = d.Name + " (" + d.Proc + "%)";
            if (((Department)d).Locked)
                page.ImageIndex = 1;
            else
                page.ImageIndex = 2;
        }

        private void tabControl1_MouseClick(object sender, MouseEventArgs e)
        {
            TabPage selected = tabControl1.SelectedTab;
            
            if(selected != addPage && selected != totalPage)
            {
                if (e.Button == MouseButtons.Right)
                {
                    this.contextMenuStrip1.Show(this.tabControl1, e.Location);
                }
                if (e.Button == MouseButtons.Left && selected != dirPage)
                {                    
                    int index = tabControl1.TabPages.IndexOf(selected) - permPages();
                    Department dep =  total.Departments[index];
                    if (dep.Locked && dep.Password != "")
                    {
                        tabControl1.SelectedTab = totalPage;
                        while (true)
                        {
                            UnlockForm form = new UnlockForm();
                            if (form.ShowDialog() == DialogResult.OK)
                            {
                                if (form.Password == dep.Password)
                                {
                                    tabControl1.SelectedTab = selected;
                                    dep.Locked = false;
                                    return;
                                }
                            }
                            else
                                return;
                        }
                    }
                }
            }
        }

        private void tabControl1_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            if (tabControl1.SelectedTab != addPage && tabControl1.SelectedTab != totalPage)
            {
                propItem_Click(this, null);
            }
        }

        private void contextMenuStrip1_Opening(object sender, CancelEventArgs e)
        {
            Point p = this.tabControl1.PointToClient(Cursor.Position);
            for (int i = 0; i < this.tabControl1.TabCount; i++)
            {
                Rectangle r = this.tabControl1.GetTabRect(i);
                if (r.Contains(p))
                {
                    this.tabControl1.SelectedIndex = i; // i is the index of tab under cursor
                    contextMenuStrip1.Items.Clear();

                    if (this.tabControl1.SelectedTab != dirPage)
                    {
                        ToolStripItem propItem = contextMenuStrip1.Items.Add("Vlastnosti");
                        propItem.Click += new EventHandler(propItem_Click);
                    }
                    ToolStripItem delItem = contextMenuStrip1.Items.Add("Smazat");
                    delItem.Click += new EventHandler(delItem_Click);
                    return;
                }
            }
            e.Cancel = true;
        }

        private void propItem_Click(object sender, EventArgs e)
        {
            Department d = total.Departments[tabControl1.SelectedIndex - permPages()];
            DepartmentProperties prop = new DepartmentProperties(ref d, false);
            prop.ShowDialog();
        }

        private void delItem_Click(object sender, EventArgs e)
        {
            if (tabControl1.SelectedTab != dirPage)
            {
                Department d = total.Departments[tabControl1.SelectedIndex - permPages()];
                total.Departments.Remove(d);
            }
            else
            {
                total.Dir = null;
            }
        }

        private void openToolStripMenuItem_Click(object sender, EventArgs e)
        {                                             
            OpenFileDialog openDialog = new OpenFileDialog();
            openDialog.Filter = "XML file|*.xml";
            openDialog.Title = "Otevřít rozpočet";
            unlockStream();
            if (openDialog.ShowDialog() == DialogResult.OK)
            {
                XMLSerializer ser = new XMLSerializer(openDialog.FileName);
                path = openDialog.FileName;
                saved = true;

                total = ser.LoadTotal();
                //odstrani se vsechny dosavadni stranky stredisek
                for (int i = 1; i < tabControl1.TabCount - 1; )
                    tabControl1.TabPages.RemoveAt(i);

                total.Departments.ListChanged += new ListChangedEventHandler(Departments_ListChanged);
                total.DirChanged += new EventHandler(total_DirChanged);
                this.Text = Texts.PrgName + " - " + openDialog.SafeFileName.Substring(0, openDialog.SafeFileName.IndexOf("."));
                manageDir(total.Dir == null);
                createTotalPage();                
                populateTabs();
                tabControl1.SelectedTab = totalPage;
            }
            lockStream(path);
        }

        private void saveToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (saved)
            {
                unlockStream();
                XMLSerializer ser = new XMLSerializer(path);
                ser.SaveTotal(total);
                lockStream(path);
            }
            else
            {
                saveAsToolStripMenuItem_Click(this, null);
            }
        }

        private void saveAsToolStripMenuItem_Click(object sender, EventArgs e)
        {
            SaveFileDialog saveDialog = new SaveFileDialog();
            saveDialog.Filter = "XML soubor|*.xml";
            saveDialog.Title = "Uložit rozpočet";
            saveDialog.AddExtension = true;
            if (saveDialog.ShowDialog() == DialogResult.OK)
            {
                XMLSerializer ser = new XMLSerializer(saveDialog.FileName);
                ser.SaveTotal(total);
                saved = true;
                if (stream != null)
                    stream.Close();                
                this.path = saveDialog.FileName;
                lockStream(this.path);
                Uri path = new Uri(saveDialog.FileName);
                String filename = path.Segments[path.Segments.Length - 1];
                this.Text = Texts.PrgName + " - " + filename.Substring(0, filename.IndexOf("."));
            }
        }

        private void populateTabs()
        {

            foreach (Department d in total.Departments)
            {
                d.DepartmentChanged += new DepartmentChangedHandler(departmentChanged);
               insertTabPage(createTabPage(d));
            }
        }

        private TabPage createTabPage(Department d)
        {
            TabPage newtab = new TabPage(d.Name + " (" + d.Proc + "%)");
            if (d.Locked && d.Password != "")
                newtab.ImageIndex = 1;
            else
                newtab.ImageIndex = 2;
            BudgetPage bp = new BudgetPage(d);
            bp.Dock = DockStyle.Fill;
            newtab.Controls.Add(bp);
            return newtab;
        }

        private void insertTabPage(TabPage page)
        {
            tabControl1.TabPages.Remove(addPage);
            tabControl1.TabPages.Add(page);
            tabControl1.SelectedTab = page;
            tabControl1.TabPages.Add(addPage);
        }

        /// <summary>
        /// Vrati pocet permanentnich stranek v zavislosti na tom jestli existuje zalozka s rezii.
        /// </summary>
        /// <returns></returns>
        private int permPages()
        {
            if (total.Dir != null)
                return 2;
            else
                return 1;
        }

        private void readExcelToolStripMenuItem_Click(object sender, EventArgs e)
        {
            OpenFileDialog openDialog = new OpenFileDialog();
            openDialog.Filter = "XLS soubor|*.xls|XLSX soubor|*.xlsx";
            openDialog.Title = "Otevřít excel";
            if (openDialog.ShowDialog() == DialogResult.OK)
            {
                List<Budget> list = XLSReader.readBudgets(total, openDialog.FileName);
                foreach (Budget b in list)
                    total.Budgets.Add(b);
            }
        }

        private void newToolStripMenuItem_Click(object sender, EventArgs e)
        {
            total = new Total();
            unlockStream();
            //odstrani se vsechny dosavani stranky stredisek
            for (int i = 1; i < tabControl1.TabCount - 1; )
                tabControl1.TabPages.RemoveAt(i);
            this.Text = Texts.PrgName + " - " + Texts.NewTotal;
            total.Departments.ListChanged += new ListChangedEventHandler(Departments_ListChanged);
            total.DirChanged += new EventHandler(total_DirChanged);
            createTotalPage();
            path = "";
            saved = false;
        }

        private void Main_FormClosing(object sender, FormClosingEventArgs e)
        {
            unlockStream();
        }

        private void unlockStream()
        {
            if (stream != null)
            {
                stream.Close();
                stream = null;
            }
        }

        private void lockStream(string path)
        {
            stream = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.None);
        }
    }
}
